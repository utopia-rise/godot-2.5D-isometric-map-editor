language: cpp
python:
  - "2.7"
matrix:
  include:
    - env: PLATFORM=ios BINDINGS_ARGS="platform=ios generate_bindings=True ios_arch=arm64 target=release" DRIVER_ARGS="platform=ios target=release ios_arch=arm64"
      os: osx
      osx_image: xcode10.2
      compiler: clang
      addons:
        homebrew:
          packages:
            - jq
            - scons
            - p7zip
          update: true
    - env: PLATFORM=linux BINDINGS_ARGS="use_llvm=yes platform=linux generate_bindings=True bits=64 target=release" DRIVER_ARGS="platform=linux use_llvm=yes target=release"
      os: linux
      compiler: clang
    - env: PLATFORM=android BINDINGS_ARGS="" DRIVER_ARGS="NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk  APP_PLATFORM=android-21" ANDROID_NDK_ROOT="/home/travis/build/utopia-rise/android-sdk/ndk-bundle"
      os: linux
    - env: PLATFORM=osx BINDINGS_ARGS="platform=osx generate_bindings=True bits=64 target=release" DRIVER_ARGS="platform=osx target=release"
      os: osx
      compiler: clang
      addons:
        homebrew:
          packages:
            - jq
            - scons
            - p7zip
          update: true
    - env: PLATFORM=windows BINDINGS_ARGS="platform=windows generate_bindings=True bits=64 target=release" DRIVER_ARGS="platform=windows target=release"
      os: windows
      compiler: clang
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install scons; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then wget -O Python27.zip http://prdownloads.sourceforge.net/scons/scons-local-3.0.5.zip && mv Python27.zip C:/Python27.zip && 7z x C:/Python27.zip -oC:/ && export PATH="/c/Python27:/c/Python27/Scripts:$PATH"; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then wget -O scons.zip http://prdownloads.sourceforge.net/scons/scons-local-3.0.5.zip && mv scons.zip C:/scons.zip && 7z x C:/scons.zip -oC:/scons; fi
  - cd ..
  - if [[ "$PLATFORM" == "android" ]]; then sh godot-2.5D-isometric-map-editor/.travis/download-ndk.sh; fi
  - if [[ "$PLATFORM" == "osx" ]]; then wget https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_osx.64.zip && 7z x Godot_v3.2.1-stable_osx.64.zip; fi
  - git clone --recursive  https://github.com/utopia-rise/godot-cpp godot-cpp
  - cd godot-cpp
  - git checkout utopia-3.2
  - git submodule update --recursive
install:
  - if [[ "$PLATFORM" == "android" ]]; then scons platform=android generate_bindings=True target=release android_arch=armv7 && scons platform=android generate_bindings=True target=release android_arch=arm64v8 && cd ../godot-2.5D-isometric-map-editor; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then C:/scons/scons.bat $BINDINGS_ARGS && cd ../godot-2.5D-isometric-map-editor; elif [[ "$PLATFORM" != "android" ]]; then scons $BINDINGS_ARGS && cd ../godot-2.5D-isometric-map-editor; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then C:/scons/scons.bat $DRIVER_ARGS; elif [[ "$PLATFORM" == "android" ]]; then $ANDROID_NDK_ROOT/ndk-build $DRIVER_ARGS && rm libs/arm64-v8a/libc++_shared.so && rm libs/armeabi-v7a/libc++_shared.so && tar zcvf libandroid_25Disometricmap_gdnative.tar.gz libs/; else scons $DRIVER_ARGS; fi
script:
  - if [[ "$PLATFORM" == "osx" ]]; then mkdir -p demo/addons/IsometricMap/libs/osx/ && cp bin/libGodotIsoMapEditor.osx.release.64.dylib demo/addons/IsometricMap/libs/osx/ cd demo && ./run_tests.sh ../../Godot.app/Contents/MacOS/Godot && cd ..; fi
